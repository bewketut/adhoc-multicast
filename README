what you need
=============
You need iptables >= 1.4.3
and kernel-source >= 2.6.17  (can also use ONLY header files -kernel-headers*.rpm/deb in /lib/modules)
tool: socat, vlc 
main module is xt_mcast.c 
What it does
============
This module provides a filter for incoming multicast traffic by doing the f/g:
1. Snooping Subscibe (or join) messages and storing the client by its group
hash
2. We also snoop mulitcast source address (unicast type). This is the part where one sort of NEEDs 
to pierce a hole for the multicast (which can be seen in the second last line) source- its unicast address.
We store the client by the multicast source hash.

3. When multicast trafffic come we hash both group and source address and
Checking if the client exists in both hashes.

testing (blocking and unblocking multicast traffic)
===================================================
For testing purpose do the following (need to be root) :
# sh test.sh 
Start vlc (www.videolan.org) stream video  on 238.234.234.1
Start extra vlc. Try to open the video on open network and entering the streamingaddress. It should NOT open.
You will have to choose UDP in both cases.

Then do the following (after changing the 192.x.x.x to your local ip)  
echo "hi" | socat - udp-sendto:192.x.x.x:4444 
and it should now open

sim_test
========
This gives a userland simulator to what the kernel module is trying to do.

Weakly related
==============
mcastcmds-nt2
=============
This allows to run commands on remote multicast joined host and importantly multicast file transfers. Who knows maybe this
could be used for android devices..imagine a lecturer using this app sending all "multicast joined" students lecture notes
without "copy from this one student or from the one who has it". I have no new computer and android building tools are
newer and demand 64-bit computers and so I have been kept dumb due to lack of money and resource. The one who gets this
idea can mention me and they should be more than capable to build cleaner application than xrender used in iphones and
androids.

